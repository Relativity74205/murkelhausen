# go get latest version

- name: go - get installed version
  shell: go version | sed 's/.*go version go\([0-9.]*\).*/\1/'
  register: go_version_installed
  changed_when: false

- name: install go main version
  block:
    - name: go - delete installation
      become: true
      file:
        path: /usr/local/go
        state: absent

    - name: go - download
      unarchive:
        # latest_version: "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        src: https://go.dev/dl/go{{ go.main_version }}.linux-amd64.tar.gz
        dest: /tmp
        remote_src: true

    - name: go - install to /usr/local/go/bin
      become: true
      copy:
        remote_src: true
        src: /tmp/go
        dest: /usr/local
        mode: 0755
        owner: root
        group: root
        directory_mode: true

    - name: go - delete
      file:
        path: /tmp/go
        state: absent

  when: go_version_installed.stdout != go.main_version

- name: go - source-files
  lineinfile:
    path: '{{ item }}'
    line: 'export PATH=$PATH:/usr/local/go/bin'
  loop: '{{ source_files }}'

- name: go - source-files - 2
  lineinfile:
    path: '{{ item }}'
    line: 'export PATH=$PATH:~/go/bin'
  loop: '{{ source_files }}'

- name: go - additional versions
  shell: '/usr/local/go/bin/go install golang.org/dl/go{{ item }}@latest && ~/go/bin/go{{ item }} download'
  register: go_sub_version_result
  changed_when: '"already downloaded" not in go_sub_version_result.stderr'
  loop: '{{ go.additional_versions }}'

- name: add golang plugin to .zshrc
  include_role:
    name: add_plugin_to_zshrc
  vars:
    new_plugin: golang
  when: oh_my_zsh.install == true
