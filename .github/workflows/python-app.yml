# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.9
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.9
#    - name: Install poetry
#      run: |
#        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py > get-poetry.py
#        python get-poetry.py --version 1.1.6
#        echo "PATH=${PATH}:${HOME}/.poetry/bin" >> $GITHUB_ENV
#    - name: Install dependencies
#      run: |
#        poetry config virtualenvs.create false
#        poetry install --no-interaction --no-ansi
#    - name: Lint with mypy
#      run: |
#        poetry run mypy src/
#    - name: Lint with black
#      run: |
#        poetry run black src/ tests/
#    - name: Test with pytest
#      run: |
#        poetry run pytest tests/


    # https://github.com/marketplace/actions/build-and-publish-docker-image-to-new-github-packages-registry
    # https://github.com/VaultVulp/gp-docker-action/blob/master/entrypoint.sh#L10
  docker:
    runs-on: ubuntu-latest
#    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build docker container
      run: |
        DOCKER_IMAGE_NAME=murkelhausen
        DOCKER_IMAGE_TAG=latest
        DOCKER_IMAGE_NAME=$(echo docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME} | tr '[:upper:]' '[:lower:]')
        DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} | tr '[:upper:]' '[:lower:]')

        docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com

        docker build -t $DOCKER_IMAGE_NAME_WITH_TAG -f $DOCKERFILE .
        docker push $DOCKER_IMAGE_NAME_WITH_TAG

#        DOCKER_IMAGE_NAME=murkelhausen
#        DOCKER_IMAGE_TAG=latest
#        DOCKER_IMAGE_NAME=$(echo docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME} | tr '[:upper:]' '[:lower:]')
#        DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} | tr '[:upper:]' '[:lower:]')
#        docker build -t $DOCKER_IMAGE_NAME_WITH_TAG .
#    - name: Push docker image to github docker repo
#      run: |
#        DOCKER_IMAGE_NAME=murkelhausen
#        DOCKER_IMAGE_TAG=latest
#        DOCKER_IMAGE_NAME=$(echo docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME} | tr '[:upper:]' '[:lower:]')
#        DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} | tr '[:upper:]' '[:lower:]')
##        docker login ghcr.io -u arkadius@schuchhardt.com -p ${{ secrets.GITHUB_TOKEN }}
#        docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
#        docker push $DOCKER_IMAGE_NAME_WITH_TAG
